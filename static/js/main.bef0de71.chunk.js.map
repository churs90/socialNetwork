{"version":3,"sources":["assets/images/user.jpg","assets/images/preloader.gif","component/preloader/Preloader.module.css","component/profile/Posts/post/Post.module.css","component/header/Logo.module.css","logo-mortal-kombat.png","component/header/HeaderTitle.module.css","component/dialogs/Dialogs.module.css","component/sidebar/friends/Friends.js","component/sidebar/Sidebar.js","redux/dialogPageReducer.js","component/dialogs/dialog/Dialog.js","component/dialogs/message/Message.js","utils/validate/validate.js","assets/FormContols/FormControls.js","component/form/formComponent.js","component/dialogs/Dialogs.js","authRedirect/authRedirect.js","component/dialogs/DialogsContainer.js","api/api.js","redux/userPageReducer.js","component/users/Users.js","component/preloader/Preloader.js","redux/users-selectors.js","component/users/UsersContainer.js","component/profile/status/StatusWithHooks.js","component/profile/profileInfo/ProfileInfo.js","redux/profilePageReducer.js","component/profile/Posts/post/Post.js","component/profile/Posts/Posts.js","component/profile/Posts/PostsContainer.js","component/profile/Profile.js","component/profile/ProfileContainer.js","component/header/Logo.js","component/header/HeaderTitle.js","component/header/Header.js","redux/AuthReducer.js","component/header/HeaderContainer.js","component/login/loginPage.js","redux/AppReducer.js","App.js","serviceWorker.js","redux/sidebarPageReducer.js","redux/redux-store.js","index.js","assets/FormContols/FormControls.module.css","component/users/Users.module.css","component/profile/profileInfo/ProfileInfo.module.css","component/sidebar/Sidebar.module.css","App.module.css","component/sidebar/friends/Friends.module.css","component/header/Header.module.css"],"names":["module","exports","Friends","props","className","styles","friends","src","ava","alt","name","FriendsBlock","friendsBlock","to","wrapperFriends","friendsData","Sidebar","sidebar","activeClassName","activeLink","stateSidebarPage","initialState","dialogsData","id","messagesData","message","messageBody","dialogPageReducer","state","action","type","newMessage","newMessageBody","DialogItem","path","dialog","Message","required","value","maxLength","length","Textarea","input","meta","error","touched","errorInput","Input","maxLengthValidate","FormComponent","onSubmit","handleSubmit","Field","component","placeholder","validate","Dialogs","dialogElements","dialogPage","map","d","Dialog","key","messagesElements","m","ReduxDialogForm","reduxForm","form","formComponent","dialogs","dialogsItem","messages","formData","alert","dialogField","maxLengthValue","mapStateToProps","isAuth","auth","withAuthRedirect","Component","connect","compose","dispatch","onChangeMessageBody","onSendMessage","instance","axios","baseURL","withCredentials","headers","userApi","pageSize","pageNumber","get","then","response","data","userId","post","delete","authApi","email","password","rememberMe","captcha","profileApi","profile","put","status","photo","FormData","append","securityApi","users","totalCount","currentPage","isFetching","followingProgress","setUsers","toggleISFollowingProgress","followingProgressIsFetching","usersPageReducer","u","followed","totalUsersCounts","newCurrentPage","filter","Paginator","leftPortionNumber","portionNumber","pagesArr","pagesCounts","Math","ceil","usersPage","portionCounts","rightPortionNumber","i","push","pages","p","onClick","changeCurrentPage","selectedPage","changePortionNumber","Users","useState","setPortionNumber","newPortionNumber","usersWrapper","avaBlock","photos","small","userPhoto","disabled","some","f","unFollow","follow","discriptionBlock","Preloader","preloader","getUsersPageProps","UsersContainer","this","getUsers","prevProps","prevState","snapshot","React","resultCode","followSucces","unFollowSucces","items","StatusWithHooks","editMode","setEditMode","setStatus","useEffect","toggleEditMode","updateStatus","autoFocus","onBlur","onChange","e","target","onDoubleClick","isOwner","ReduxProfileDataForm","errorForm","Object","keys","userProfile","contacts","contact","ProfileData","onChangeEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","href","ProfileInfo","profilePage","profileInfo","avatar","large","files","updatePhoto","dopInfo","initialValues","updateUserProfile","postsData","like","postText","setUserProfile","profilePageReducer","newPostArr","newText","Post","ReduxPostForm","Posts","postsElement","content","postField","PostsContainer","addPost","onChangePostText","Profile","ProfileContainer","setState","match","params","authorizedUserId","history","getStatus","userData","updateStatusSucces","getState","a","stopSubmit","_error","Promise","reject","withRouter","Logo","logo","logotip","HeaderTitle","headerTitle","Header","header","logout","login","captchaUrl","getCaptchaUrlSucces","setUserDataSucces","getCaptchaUrl","url","setUserData","AuthReducer","stateCopy","HeaderContainer","ReduxFormLoginPage","initializedApp","AppReducer","App","initialized","wrapper","sidebarPage","wrapperContent","render","DialogsContainer","app","Boolean","window","location","hostname","sidebarPageReducer","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.bef0de71.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.9775c4b8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/preloader.a6486ffc.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__VgWKi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__38hj1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__o4xKV\"};","module.exports = __webpack_public_path__ + \"static/media/logo-mortal-kombat.d178c0d9.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerTitle\":\"HeaderTitle_headerTitle__2zUcK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__FEtYZ\",\"dialog\":\"Dialogs_dialog__3JMOC\",\"dialogsItem\":\"Dialogs_dialogsItem__AJAKn\",\"messages\":\"Dialogs_messages__33qXT\",\"message\":\"Dialogs_message__315SI\"};","import React from 'react';\nimport styles from './Friends.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Friends = (props) => {\n    return (\n        <div className={styles.friends}>\n            <img src={props.ava} alt=\"\"/>\n            <p>{props.name}</p>\n        </div>\n    )\n}\n\nconst FriendsBlock = (props) => {\n  return (\n    <div className={styles.friendsBlock}>\n        <NavLink to={\"/friends\"}>Friends</NavLink>\n        <div className={styles.wrapperFriends}>\n            <Friends name={props.friendsData[0].name} ava={props.friendsData[0].ava}/>\n            <Friends name={props.friendsData[1].name} ava={props.friendsData[1].ava}/>\n            <Friends name={props.friendsData[2].name} ava={props.friendsData[2].ava}/>\n        </div>\n    </div>\n    )\n}\n\nexport default FriendsBlock;\n","import React from 'react';\nimport styles from './Sidebar.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport FriendsBlock from \"./friends/Friends\";\n\nconst Sidebar = (props) => {\n  return (\n    <nav className={styles.sidebar}>\n        <div><NavLink to={\"/profile\"} activeClassName={styles.activeLink}>Profile</NavLink></div>\n        <div><NavLink to={\"/dialogs\"} activeClassName={styles.activeLink}>Messages</NavLink></div>\n        <div><NavLink to={\"/users\"} activeClassName={styles.activeLink}>Users</NavLink></div>\n        <div><a>News</a></div>\n        <div><a>Music</a></div>\n        <div><a>Settings</a></div>\n        <FriendsBlock friendsData={props.stateSidebarPage.friendsData}/>\n    </nav>\n    )\n}\n\nexport default Sidebar;\n","const ON_CHANGE_MESSAGE_BODY = \"ON-CHANGE-MESSAGE-BODY\";\r\nconst ON_SEND_MESSAGE = \"ON-SEND-MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {\r\n            name: \"Vadim\",\r\n            id: 1,\r\n            ava: \"https://c7.hotpng.com/preview/549/388/33/shrek-the-third-donkey-princess-fiona-gingerbread-man-t-shirt-shrek.jpg\"\r\n        },\r\n        {\r\n            name: \"Sveta\",\r\n            id: 2,\r\n            ava: \"https://i.pinimg.com/736x/03/a9/c3/03a9c377e1fd89b539ab5cd7539f1f89--tangled-dress-tangled-cosplay.jpg\"\r\n        },\r\n        {\r\n            name: \"Alex\",\r\n            id: 3,\r\n            ava: \"https://vignette.wikia.nocookie.net/tekken/images/0/07/Bob-t6br.jpg/revision/latest?cb=20120810084348&path-prefix=ru\"\r\n        },\r\n        {\r\n            name: \"Mike\",\r\n            id: 4,\r\n            ava: \"https://2000culture.com/images2/kakviglyadelibivsepersonazhiiznarutovrea_EB1636C8.jpg\"\r\n        },\r\n        {name: \"Jhon\", id: 5, ava: \"https://www.facenews.ua/media/contentimages/72e5b8273c297356.jpg\"},\r\n    ], messagesData: [\r\n        {id:1, message: \"hello\"},\r\n        {id:2, message: \"xxxxxxxxxxxxxxxxxxxxxx\"},\r\n        {id:3, message: \"qqqqqqqqqqqqqqqqqqqqqq\"}\r\n    ],\r\n    messageBody: \"\"\r\n}\r\n\r\n\r\nlet dialogPageReducer = (state = initialState,action) => {\r\n    switch (action.type) {\r\n        case ON_SEND_MESSAGE:\r\n        {\r\n            let newMessage = {\r\n                message:state.messageBody\r\n            };\r\n            return {\r\n                ...state,\r\n                messagesData:[...state.messagesData,newMessage],\r\n                messageBody:\"\"\r\n            }\r\n        }\r\n        case ON_CHANGE_MESSAGE_BODY:\r\n        {\r\n            return {\r\n                ...state,\r\n                messageBody: action.newMessageBody\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport const onChangeMessageBodyAC = (newMessageBody) => {\r\n    return {\r\n        newMessageBody, type: ON_CHANGE_MESSAGE_BODY\r\n    }\r\n};\r\n\r\nexport const onSendMessageTextAC = () => {\r\n    return {\r\n        type: ON_SEND_MESSAGE\r\n    }\r\n};\r\n\r\nexport default dialogPageReducer;","import React from 'react';\nimport styles from './../Dialogs.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n    let path = \"/dialogs/\" + props.id;\n    return (\n        <div className={styles.dialog}><NavLink to={path}><img src={props.ava} alt=\"\"/>{props.name}</NavLink></div>\n    )\n}\n\nexport default DialogItem;\n","import React from 'react';\nimport styles from './../Dialogs.module.css';\n\nconst  Message = (props) => {\n    return (\n        <div className={styles.message}>{props.message}</div>\n    )\n}\n\nexport default Message;\n","export let required = (value) => {\r\n    if (value) {\r\n        return undefined\r\n    }\r\n    return \"Field is required\"\r\n};\r\n\r\nexport let maxLength = (maxLength) => {\r\n    return (value) => {\r\n        if (value.length > maxLength) {\r\n            return `Max length is ${maxLength} symbols`\r\n        }\r\n        return undefined\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./FormControls.module.css\"\r\n\r\nexport let Textarea = ({input,meta,...props}) => {\r\n    let error = meta.error && meta.touched ? \"errorTextarea\" : \"\";\r\n    return(\r\n        <div>\r\n            <textarea className={styles[error]} {...input} {...props}/>\r\n            <div>\r\n                {meta.error && meta.touched && <span className={styles.errorInput}>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport let Input = ({input,meta,...props}) => {\r\n    let error = meta.error && meta.touched ? \"errorTextarea\" : \"\";\r\n    return(\r\n        <div>\r\n            <input className={styles[error]} {...input} {...props}/>\r\n            <div>\r\n                {meta.error && meta.touched && <span className={styles.errorInput}>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n};","import React from \"react\"\r\nimport {Field} from \"redux-form\";\r\nimport {maxLength, required} from \"../../utils/validate/validate\";\r\nimport {Textarea} from \"../../assets/FormContols/FormControls\";\r\n\r\nlet maxLengthValidate = maxLength(10);\r\n\r\nlet FormComponent = (props) => {\r\n    return (\r\n        <form onSubmit = {props.handleSubmit}>\r\n            <Field component={Textarea} name={props.name} placeholder={\"Введите сообщение\"} validate={[required,maxLengthValidate]}/>\r\n            <button>Добавить пост</button>\r\n        </form>\r\n        )\r\n}\r\n\r\nexport default FormComponent;","import React from 'react';\nimport styles from './Dialogs.module.css';\nimport DialogItem from \"./dialog/Dialog\";\nimport Message from \"./message/Message\";\nimport {reduxForm} from \"redux-form\";\nimport formComponent from \"../form/formComponent\";\n\n\n\nconst Dialogs = (props) => {\n\n    let dialogElements = props.dialogPage.dialogsData.map(d=><DialogItem key={d.id} name={d.name} id={d.id} ava={d.ava}/>);\n    let messagesElements = props.dialogPage.messagesData.map(m=><Message key={m.id} message={m.message}/>);\n\n    let onSendMessage = () => {\n        props.onSendMessage()\n    }\n\n    let onChangeMessageBody = (e) => {\n        props.onChangeMessageBody(e.target.value)\n    };\n\n    let onSubmit = (formData) => {\n        alert(formData.dialogField)\n    };\n\n    let ReduxDialogForm = reduxForm({form:\"dialog\"})(formComponent);\n\n  return (\n    <div className={styles.dialogs}>\n        <div className={styles.dialogsItem}>\n            {dialogElements}\n        </div>\n        <div className={styles.messages}>\n            {messagesElements}\n            <div>\n            <ReduxDialogForm onSubmit={onSubmit} name={\"dialogField\"} maxLengthValue={30} />\n            </div>\n        </div>\n    </div>\n    )\n}\n\n\nexport default Dialogs;\n","import React from \"react\"\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth:state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport let withAuthRedirect = (Component) => {\r\n    let WrapperComponent = (props) => {\r\n        if(!props.isAuth){\r\n            return <Redirect to={\"/login\"}/>\r\n        }\r\n        return <Component {...props}/>\r\n    }\r\n    let connectedWrapperComponent = connect(mapStateToProps)(WrapperComponent);\r\n    return connectedWrapperComponent\r\n};\r\n\r\n\r\n\r\n","import React from 'react';\nimport {onChangeMessageBodyAC, onSendMessageTextAC} from \"../../redux/dialogPageReducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {withAuthRedirect} from \"../../authRedirect/authRedirect\";\n\n    const mapStateToProps = (state) => {\n        return {\n            dialogPage:state.dialogPage\n        }\n    };\n\n    const mapDispatchToProps = (dispatch) => {\n        return {\n            onChangeMessageBody: (messageBody) =>{dispatch(onChangeMessageBodyAC(messageBody))},\n            onSendMessage: () => {dispatch(onSendMessageTextAC())}\n        }\n    };\n\n\nexport default compose(connect(mapStateToProps,mapDispatchToProps),withAuthRedirect)(Dialogs);\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    withCredentials: true,\r\n    headers:{\r\n        \"API-KEY\": \"90ce7324-286f-412d-a2b5-0732b3cf100d\"\r\n    }\r\n});\r\n\r\nexport const userApi = {\r\n    getUsers(pageSize,pageNumber){\r\n     return instance.get(`users?count=${pageSize}&page=${pageNumber}`)\r\n             .then(response => { return response.data})\r\n    },\r\n\r\n    follow(userId){\r\n        return instance.post(`follow/${userId}`).then(response => {return response.data})\r\n    },\r\n\r\n    unFollow(userId){\r\n        return instance.delete(`follow/${userId}`).then(response => {return response.data})\r\n    },\r\n\r\n\r\n\r\n};\r\n\r\nexport const authApi = {\r\n    getAuth(){\r\n        return instance.get(\"auth/me\").then(response => {return response.data})\r\n    },\r\n    loginUser(email,password,rememberMe,captcha = null) {\r\n        return instance.post(\"auth/login\",{email,password,rememberMe,captcha}).then(response => {return response.data})\r\n    },\r\n    logoutUser() {\r\n        return instance.delete(\"auth/login\").then(response => {return response.data})\r\n    }\r\n};\r\n\r\nexport const profileApi = {\r\n    setUserProfile(userId) {\r\n        return instance.get(`profile/${userId}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    updateUserProfile(profile) {\r\n        return instance.put(`profile`, profile).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status}).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n\r\n    updatePhoto(photo) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\",photo)\r\n        return instance.put(`profile/photo`, formData,{headers: {'Content-type': 'multipart/form-data'}})\r\n    }\r\n}\r\n\r\nexport const securityApi = {\r\n    getCaptchaUrl(){\r\n        return instance.get(\"security/get-captcha-url\").then(response => {return response.data})\r\n    },\r\n};","import {userApi} from \"../api/api\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET-USERS\";\r\nconst SET_TOTAL_USERS_COUNTS = \"SET-TOTAL-USERS-COUNTS\";\r\nconst CHANGE_CURRENT_PAGE = \"CHANGE-CURRENT-PAGE\";\r\nconst IS_FETCHING = \"IS-FETCHING\";\r\nconst FOLLOWING_PROGRESS = \"FOLLOWING-PROGRESS\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalCount: 0,\r\n    pageSize: 35,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingProgress: []\r\n};\r\nlet usersPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map((u) => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map((u) => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false};\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users:[...action.users]\r\n            };\r\n        case SET_TOTAL_USERS_COUNTS:\r\n            return {\r\n                ...state,\r\n                totalCount: action.totalUsersCounts\r\n            };\r\n        case CHANGE_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.newCurrentPage\r\n            };\r\n        case IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            };\r\n        case FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingProgress: action.followingProgressIsFetching ? [...state.followingProgress,action.userId] : state.followingProgress.filter(id => id!=action.userId)\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const followSucces = (userId) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId\r\n    }\r\n};\r\n\r\nexport const unFollowSucces = (userId) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId\r\n    }\r\n};\r\n\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    }\r\n};\r\n\r\nexport const setTotalUsersCounts = (totalUsersCounts) => {\r\n    return{\r\n        type: SET_TOTAL_USERS_COUNTS,\r\n        totalUsersCounts\r\n    }\r\n};\r\n\r\nexport const changeCurrentPageSucces = (newCurrentPage) => {\r\n    return {\r\n        type: CHANGE_CURRENT_PAGE,\r\n        newCurrentPage\r\n    }\r\n};\r\n\r\nexport const isFetching = (isFetching) => {\r\n    return {\r\n        type:IS_FETCHING,\r\n        isFetching\r\n    }\r\n};\r\n\r\nexport const toggleISFollowingProgress = (followingProgressIsFetching,userId) => {\r\n    debugger;\r\n    return {\r\n        type:FOLLOWING_PROGRESS,\r\n        followingProgressIsFetching,\r\n        userId\r\n    }\r\n};\r\n\r\nexport const getUsers = (pageSize,currentPage) =>{\r\n return (dispatch) => {\r\n     dispatch(isFetching(true));\r\n     userApi.getUsers(pageSize,currentPage).then((data) => {\r\n         dispatch(setUsers(data.items));\r\n         dispatch(setTotalUsersCounts(data.totalCount));\r\n         dispatch(isFetching(false));\r\n     });\r\n }\r\n};\r\n\r\nexport const changeCurrentPage = (pageSize,pageNumber) =>{\r\n    return (dispatch) => {\r\n        dispatch(isFetching(true));\r\n        dispatch(changeCurrentPageSucces(pageNumber));\r\n        userApi.getUsers(pageSize,pageNumber).then((data) => {\r\n            dispatch(setUsers(data.items));\r\n            dispatch(isFetching(false));\r\n        });\r\n    }\r\n};\r\n\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleISFollowingProgress(true,userId));\r\n        dispatch(isFetching(true));\r\n        userApi.follow(userId).then((data) => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(followSucces(userId));\r\n                dispatch(toggleISFollowingProgress(false,userId));\r\n                dispatch(isFetching(false));\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nexport const unFollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleISFollowingProgress(true,userId));\r\n        dispatch(isFetching(true));\r\n        userApi.unFollow(userId).then((data) => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(unFollowSucces(userId));\r\n                dispatch(toggleISFollowingProgress(false,userId));\r\n                dispatch(isFetching(false));\r\n            }\r\n        });\r\n    }\r\n};\r\nexport default usersPageReducer;","import React, {useState} from 'react';\nimport styles from './Users.module.css'\nimport * as axios from \"axios\";\nimport userPhoto from '../../assets/images/user.jpg'\nimport {NavLink} from \"react-router-dom\";\nimport {userApi} from \"../../api/api\";\nimport {isFetching} from \"../../redux/userPageReducer\";\n\n\nlet Users = (props) => {\n    let [portionNumber, setPortionNumber] = useState(1);\n    let changePortionNumber = (newPortionNumber) => {\n        setPortionNumber(newPortionNumber)\n    };\n\n    let users = props.usersPage.users.map((u) => <div className={styles.usersWrapper}>\n        <div className={styles.avaBlock}>\n            <div className={styles.ava}>\n                <NavLink to={\"/profile/\" + u.id}>\n                    <img src={u.photos.small ? u.photos.small : userPhoto} alt=\"\"/>\n                </NavLink>\n            </div>\n            <div>\n                {u.followed ? <button disabled={props.usersPage.followingProgress.some(f =>f===u.id)} onClick={() => {\n                        props.unFollow(u.id)\n                    }}>unFollow</button> :\n                    <button disabled={props.usersPage.followingProgress.some(f =>f===u.id)} onClick={() => {\n                        props.follow(u.id)\n                    }}>follow</button>}\n            </div>\n        </div>\n        <div className={styles.discriptionBlock}>\n            <div>\n                <p>{u.name}</p>\n                <p className={styles.status}>{u.status}</p>\n            </div>\n            <div>\n                <p>id: {u.id}</p>\n                <p></p>\n            </div>\n        </div>\n    </div>);\n    return (\n        <div>\n            <h1>Users</h1>\n            <Paginator {...props} portionNumber={portionNumber} changePortionNumber={changePortionNumber}/>\n            {users}\n            <Paginator {...props} portionNumber ={portionNumber} changePortionNumber={changePortionNumber}/>\n        </div>\n    )\n\n};\n\nlet Paginator = (props) => {\n    let portionSize = 10;\n\n\n    let leftPortionNumber = (props.portionNumber - 1) * portionSize + 1;\n    let pagesArr = [];\n    let pagesCounts = Math.ceil(props.usersPage.totalCount / props.usersPage.pageSize);\n    let portionCounts = Math.ceil(pagesCounts/portionSize);\n    let rightPortionNumber = props.portionNumber*portionSize;\n    for (let i = 1; i <= pagesCounts; i++) {\n        pagesArr.push(i);\n    }\n\n    let pages = pagesArr.filter(p => p>=leftPortionNumber && p <= rightPortionNumber).map((p) => <span onClick={() => props.changeCurrentPage(p)}\n                                                                                                       className={props.usersPage.currentPage === p ? styles.selectedPage : \"\"}>{p} </span>);\n    return (\n        <div>\n            {leftPortionNumber > 1 && <button onClick={()=>{props.changePortionNumber(props.portionNumber-1)}}>prev</button>}\n            {pages}\n            {portionCounts > props.portionNumber && <button onClick={()=>{props.changePortionNumber(props.portionNumber+1)}}>next</button>}\n        </div>\n    )\n}\n\nexport default Users;\n","import React from 'react';\r\nimport preloader from \"../../assets/images/preloader.gif\"\r\nimport styles from './Preloader.module.css'\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={styles.preloader}>\r\n            <img src={preloader} alt=\"\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","export let getUsersPageProps =(state) => {\r\n    return state.usersPage\r\n}","import React from 'react';\nimport {connect} from \"react-redux\";\nimport Users from \"./Users\";\nimport {\n    changeCurrentPage,\n    follow, getUsers, isFetching,\n    setTotalUsersCounts,\n    setUsers, toggleISFollowingProgress,\n    unFollow\n} from \"../../redux/userPageReducer\";\nimport * as axios from \"axios\";\nimport Preloader from \"../preloader/Preloader\";\nimport {userApi} from \"../../api/api\";\nimport {withAuthRedirect} from \"../../authRedirect/authRedirect\";\nimport {compose} from \"redux\";\nimport {getUsersPageProps} from \"../../redux/users-selectors\";\n\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        this.props.getUsers(this.props.usersPage.pageSize,this.props.usersPage.currentPage)\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.props === prevProps){\n            this.props.getUsers(this.props.usersPage.pageSize,this.props.usersPage.currentPage)\n        }\n    }\n\n    changeCurrentPage = (pageNumber) => {\n        this.props.changeCurrentPage(this.props.usersPage.pageSize,pageNumber)\n    };\n    render() {\n        return (<>\n                {this.props.usersPage.isFetching && <Preloader/>}\n            <Users usersPage={this.props.usersPage}\n                   follow={this.props.follow}\n                   unFollow={this.props.unFollow}\n                   changeCurrentPage={this.changeCurrentPage}/>\n            </>\n        )\n    }\n}\n\n    const mapStateToProps = (state) => {\n        return {\n            usersPage:getUsersPageProps(state)\n        }\n    };\n\nexport default compose(connect(mapStateToProps,{follow,unFollow,changeCurrentPage,getUsers}))(UsersContainer);\n","import React, {useEffect, useState} from 'react';\r\n\r\n\r\nlet StatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    },[props.status]);\r\n\r\n    let toggleEditMode = (editMode) => {\r\n        setEditMode(editMode);\r\n        if (!editMode) {\r\n            props.updateStatus(status)\r\n        }\r\n    };\r\n\r\n    let onChangeStatus = (e) => {\r\n        setStatus(e.target.value)\r\n    };\r\n    return (\r\n        <>\r\n            {editMode &&\r\n            <div>\r\n                <b>Status:</b>\r\n                <input autoFocus={true} onBlur={() => toggleEditMode(false)} type=\"text\" value={status}\r\n                       onChange={onChangeStatus}/>\r\n            </div>}\r\n            {!editMode &&\r\n            <div>\r\n                <b>Status:</b>\r\n                <span onDoubleClick={props.isOwner ? () => toggleEditMode(true): null}> {props.status || \"---------\"}</span>\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StatusWithHooks;","import React from 'react';\nimport styles from './ProfileInfo.module.css';\nimport Preloader from \"../../preloader/Preloader\";\nimport StatusWithHooks from \"../status/StatusWithHooks\";\nimport {Input, Textarea} from \"../../../assets/FormContols/FormControls\";\nimport {required} from \"../../../utils/validate/validate\";\nimport {Field, reduxForm} from \"redux-form\";\n\n\nconst ProfileInfo = (props) => {\n\n    if(!props.profilePage.userProfile){\n        return (\n            <Preloader/>\n        )\n    }\n\n    let onSubmit = (formData) => {\n        props.updateUserProfile(formData).then(()=>{\n            props.onChangeEditMode(false);\n        })\n    }\n\n    const updatePhoto = (e) => {\n        if(e.target.files.length) {\n            props.updatePhoto(e.target.files[0])\n        }\n    }\n\n    return (\n        <div className={styles.profileInfo}>\n            <div>\n                <div className={styles.avatar}><img src={props.profilePage.userProfile.photos.large ? props.profilePage.userProfile.photos.large : \"https://i.ya-webdesign.com/images/user-avatar-png-7.png\"} alt=\"\"/></div>\n                {props.isOwner && <input type=\"file\" onChange={updatePhoto}/>}\n                <StatusWithHooks status={props.profilePage.status} updateStatus={props.updateStatus} isOwner={props.isOwner}/>\n            </div>\n            <div className={styles.dopInfo}>\n                {props.editMode ? <ReduxProfileDataForm initialValues={props.profilePage.userProfile} userProfile={props.profilePage.userProfile} onSubmit={onSubmit}/> :\n                    <ProfileData  userProfile={props.profilePage.userProfile} onChangeEditMode={props.onChangeEditMode} isOwner={props.isOwner}/>}\n            </div>\n        </div>\n    )\n}\n\n\nlet ProfileDataForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            {props.error &&\n            <div className={styles.errorForm}>{props.error}</div>\n            }\n            <div>\n                <b>fullName:</b> <Field placeholder={\"Введите имя\"} type=\"text\" component={Input} name={\"fullName\"}/>\n            </div>\n            <div>\n                <b>lookingForAJob:</b> <Field type=\"checkbox\" component={Input} name={\"lookingForAJob\"}/>\n            </div>\n            <div>\n                <b>lookingForAJobDescription:</b> <Field placeholder={\"Введите ваши скилы\"} type=\"text\" component={Textarea} name={\"lookingForAJobDescription\"}/>\n            </div>\n            <div>\n                <b>AboutME:</b> <Field placeholder={\"Побольше информации о себе\"} type=\"text\" component={Textarea} name={\"aboutMe\"}/>\n            </div>\n            <div>\n                Contacts: {Object.keys(props.userProfile.contacts).map(key => {\n                return <div key={key} className={styles.contact}>\n                    <b>{key}:</b> <Field placeholder={key} type=\"text\" component={Input} name={\"contacts.\"+key}/>\n                </div>\n            })}\n            </div>\n            <div><button>Save</button></div>\n        </form>\n    )\n}\n\nlet ReduxProfileDataForm = reduxForm({form:\"edit-profile\"})(ProfileDataForm);\n\nlet ProfileData = (props) => {\n    return (\n        <div>\n            {props.isOwner && <button onClick={()=>{props.onChangeEditMode(true)}}>Change Profile</button>}\n            <div>\n                <b>fullName:</b> {props.userProfile.fullName}\n            </div>\n            <div>\n                <b>lookingForAJob:</b> {props.userProfile.lookingForAJob ? \"Yes\" : \"No\"}\n            </div>\n            {props.userProfile.lookingForAJob && <div>\n                <b>lookingForAJobDescription:</b> {props.userProfile.lookingForAJobDescription}\n            </div>}\n            <div>\n                <b>AboutME:</b> {props.userProfile.aboutMe}\n            </div>\n            <div>\n                Contacts: {Object.keys(props.userProfile.contacts).map(key => {\n                return <Contact key={key} contactTitle={key} contactValue={props.userProfile.contacts[key]}/>\n            })}\n            </div>\n        </div>\n    )\n}\n\nlet Contact = ({contactTitle, contactValue}) => {\n    return (\n        <div className={styles.contact}>\n            <b>{contactTitle}:</b> <a href={contactValue}>{contactValue}</a>\n        </div>\n    )\n}\n\n\nexport default ProfileInfo;\n","import {profileApi} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ON_CHANGE_POST_TEXT = \"ON-CHANGE-POST-TEXT\";\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USER_PROFILE = \"SET-USER-PROFILE\";\r\nconst SET_STATUS = \"SET-STATUS\";\r\nconst UPDATE_STATUS = \"UPDATE-STATUS\";\r\nlet initialState={\r\n    postsData: [\r\n        {id:1, message: \"How are you?\", like: 12},\r\n        {id:2, message: \"Where are you from?\", like: 18},\r\n        {id:3, message: \"Where are you from?\", like: 23},\r\n        {id:4, message: \"Where are you from?\", like: 11},\r\n        {id:5, message: \"How are you?\", like: 122},\r\n    ],\r\n    postText: \"\",\r\n    userProfile: null,\r\n    status: ''\r\n};\r\nlet profilePageReducer = (state=initialState,action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n        {\r\n            let newPostArr = {\r\n                message: state.postText,\r\n                like: 13\r\n            };\r\n            return {\r\n                ...state,\r\n                postsData:[...state.postsData,newPostArr],\r\n                postText:''\r\n            }\r\n        }\r\n        case ON_CHANGE_POST_TEXT:\r\n        {\r\n            return {\r\n                ...state,\r\n                postText: action.newText\r\n            }\r\n        }\r\n        case SET_USER_PROFILE:\r\n        {\r\n            return {\r\n                ...state,\r\n                userProfile: action.userProfile\r\n            }\r\n        }\r\n        case SET_STATUS:\r\n        {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case UPDATE_STATUS:\r\n        {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport const addPost = () => {\r\n    return {\r\n        type: ADD_POST\r\n    }\r\n};\r\n\r\nexport const onChangePostText = (newText) => {\r\n    return {\r\n        newText, type: ON_CHANGE_POST_TEXT\r\n    }\r\n};\r\n\r\nexport const setUserProfileSucces = (userProfile) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        userProfile\r\n    }\r\n};\r\n\r\nexport const getStatusSucces = (status) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        status\r\n    }\r\n};\r\n\r\nexport const updateStatusSucces = (status) => {\r\n    return {\r\n        type: UPDATE_STATUS,\r\n        status\r\n    }\r\n};\r\n\r\nexport const getStatus = (userId) => {\r\n    return (dispatch) => {\r\n        profileApi.getStatus(userId).then(data => {\r\n            dispatch(getStatusSucces(data))\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateStatus = (status) => {\r\n    return (dispatch) => {\r\n        profileApi.updateStatus(status).then(data => {\r\n            if(data.resultCode===0) {\r\n                dispatch(updateStatusSucces(status))\r\n            }\r\n        })\r\n    }\r\n};\r\n\r\nexport const setUserProfile = (userId) => {\r\n    return (dispatch) => {\r\n        profileApi.setUserProfile(userId).then((data) => {\r\n            dispatch(setUserProfileSucces(data));\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateUserProfile = (profile) => {\r\n    return async (dispatch,getState) => {\r\n        const userId = getState().auth.userData.id;\r\n        const data = await profileApi.updateUserProfile(profile);\r\n            if(data.resultCode===0){\r\n                dispatch(setUserProfile(userId));\r\n            }else {\r\n                dispatch(stopSubmit(\"edit-profile\",{_error:data.messages[0]}));\r\n                return Promise.reject(data.messages[0])\r\n            };\r\n    }\r\n};\r\n\r\nexport const updatePhoto = (photo) => {\r\n    return (dispatch,getState) => {\r\n        const userId = getState().auth.userData.id;\r\n        profileApi.updatePhoto(photo).then((response) => {\r\n            if(response.data.resultCode===0) {\r\n                dispatch(setUserProfile(userId));\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nexport default profilePageReducer;","import React from 'react';\nimport styles from './Post.module.css';\nimport Preloader from \"../../../preloader/Preloader\";\n\nconst Post = (props) => {\n    if(!props.userProfile){\n        return (\n            <Preloader/>\n        )\n    }\n  return (\n    <div className={styles.post}>\n        <img src={props.userProfile.photos.small ? props.userProfile.photos.small : \"https://i.ya-webdesign.com/images/user-avatar-png-7.png\"} alt=\"\"/>\n        <span>{props.message}</span><br/>\n        <span> like {props.like}</span>\n    </div>\n    )\n}\n\nexport default Post;\n","import React from 'react';\nimport styles from './Posts.module.css';\nimport Post from \"./post/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport FormComponent from \"../../form/formComponent\";\n\nconst Posts = (props) => {\n\n    let addPost = () => {\n        props.addPost();\n    };\n\n    let onChangePostText = (e) => {\n        let newText = e.currentTarget.value;\n        props.onChangePostText(newText)\n    };\n\n    let onSubmit = (formData) => {\n        alert(formData.postField)\n    }\n    let postsElement = props.profilePage.postsData.map(p => <Post key={p.id} message={p.message} like={p.like} userProfile={props.profilePage.userProfile}/>);\n\n    return (\n        <div className={styles.content}>\n            Мои посты\n            <div className=\"newPost\">\n                <ReduxPostForm onSubmit={onSubmit} name={\"postField\"} maxLengthValue={10} />\n            </div>\n            {postsElement}\n        </div>\n    )\n};\n\n\n\nlet ReduxPostForm = reduxForm({form:\"postForm\"})(FormComponent);\n\nexport default Posts;\n","import React from 'react';\nimport {addPost, onChangePostText} from \"../../../redux/profilePageReducer\";\nimport Posts from \"./Posts\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = (state) => {\n    return {\n        profilePage: state.profilePage\n    }\n}\n\nconst PostsContainer = connect(mapStateToProps, {addPost,onChangePostText})(Posts);\nexport default PostsContainer;\n","import React from 'react';\nimport styles from './Profile.module.css';\nimport ProfileInfo from \"./profileInfo/ProfileInfo\";\nimport PostsContainer from \"./Posts/PostsContainer\";\nimport {updatePhoto} from \"../../redux/profilePageReducer\";\n\n\nconst Profile = (props) => {\n    return (\n        <div className={styles.profile}>\n            <ProfileInfo profilePage={props.profilePage} updateStatus={props.updateStatus}\n                         isOwner={props.isOwner} editMode={props.editMode}\n                         userId={props.userId}\n                         onChangeEditMode={props.onChangeEditMode}\n                         updateUserProfile={props.updateUserProfile}\n                         updatePhoto={props.updatePhoto}\n            />\n            <hr/>\n            <PostsContainer/>\n        </div>\n    )\n};\n\nexport default Profile;\n","import React from 'react';\nimport styles from './Profile.module.css';\nimport {connect} from \"react-redux\";\nimport Profile from \"./Profile\";\nimport {getStatus, setUserProfile, updatePhoto, updateStatus, updateUserProfile} from \"../../redux/profilePageReducer\";\nimport { withRouter } from 'react-router-dom';\nimport {withAuthRedirect} from \"../../authRedirect/authRedirect\";\nimport {compose} from \"redux\";\n\n\n\nclass ProfileContainer extends React.Component {\n\n    state = {\n        editMode: false\n}\n\nonChangeEditMode = (editMode) => {\n        this.setState({\n            editMode\n        })\n};\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if(!userId){\n            userId=this.props.authorizedUserId;\n            if(!userId){\n                this.props.history.push(\"/login\")\n            }\n        }\n\n        this.props.setUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.props.match.params.userId != prevProps.match.params.userId) {\n            let userId = this.props.match.params.userId;\n            if(!userId){\n                userId=this.props.authorizedUserId;\n                if(!userId){\n                    this.props.history.push(\"/login\")\n                }\n            }\n\n            this.props.setUserProfile(userId);\n            this.props.getStatus(userId);\n        }\n    }\n\n    render() {\n        return (\n            <Profile {...this.props} isOwner = {!this.props.match.params.userId} editMode={this.state.editMode} onChangeEditMode={this.onChangeEditMode} userId={this.userId}/>\n        )\n    }\n};\n\nlet mapStateToProps = (state) => {\n    return {\n        profilePage: state.profilePage,\n        authorizedUserId: state.auth.userData.id\n    }\n};\n\nexport default compose(connect(mapStateToProps,{setUserProfile,getStatus,updateStatus,updateUserProfile,updatePhoto}),withAuthRedirect,withRouter)(ProfileContainer);\n","import React from 'react';\nimport styles from './Logo.module.css';\nimport logotip from './../../logo-mortal-kombat.png';\n\nconst Logo = () => {\n  return (\n    <div className={styles.logo}>\n        <img src={logotip} alt=\"\"/>\n    </div>\n    )\n}\n\nexport default Logo;\n","import React from 'react';\nimport styles from './HeaderTitle.module.css';\n\nconst HeaderTitle = () => {\n  return (\n    <div className={styles.headerTitle}>\n        Social Network\n    </div>\n    )\n}\n\nexport default HeaderTitle;\n","import React from 'react';\nimport styles from './Header.module.css';\nimport Logo from \"./Logo\";\nimport HeaderTitle from \"./HeaderTitle\";\nimport {NavLink} from \"react-router-dom\";\n\nconst Header = (props) => {\n  return (\n    <div className={styles.header}>\n      <Logo/>\n      <HeaderTitle/>\n      <div className={styles.auth}>\n          {props.isAuth ? <span>{props.userData.email} <button onClick={props.logout}>Logout</button></span> : <NavLink to={\"/login\"}>Login</NavLink>}\n      </div>\n    </div>\n    )\n};\n\nexport default Header;\n","import {authApi, securityApi} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = \"SET-USER-DATA\";\r\nconst GET_CAPTCHA_URL = \"GET_CAPTCHA_URL\"\r\n\r\n\r\nlet initialState = {\r\n    userData: {\r\n        id: null,\r\n        login: null,\r\n        email: null,\r\n    },\r\n    isAuth: false,\r\n    captchaUrl: null\r\n};\r\nlet AuthReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            let stateCopy = {...state};\r\n            stateCopy.userData = {...state.userData};\r\n            stateCopy.userData.id = action.userData.data.id;\r\n            stateCopy.userData.login = action.userData.data.login;\r\n            stateCopy.userData.email = action.userData.data.email;\r\n            stateCopy.isAuth = action.isAuth;\r\n            return stateCopy;\r\n        case GET_CAPTCHA_URL:\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.captchaUrl\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const getCaptchaUrlSucces = (captchaUrl) => {\r\n    return {\r\n        type: GET_CAPTCHA_URL,\r\n        captchaUrl\r\n    }\r\n}\r\n\r\nexport const setUserDataSucces = (userData, isAuth) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        isAuth,\r\n        userData\r\n    }\r\n};\r\n\r\nexport const getCaptchaUrl = () => {\r\n    return async (dispatch) => {\r\n        const captchaUrl = await securityApi.getCaptchaUrl()\r\n        dispatch(getCaptchaUrlSucces(captchaUrl.url))\r\n    }\r\n}\r\n\r\nexport const setUserData = () => {\r\n    return (dispatch) => {\r\n        return authApi.getAuth().then((data) => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(setUserDataSucces(data, true))\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe = false, captcha) => {\r\n    return async (dispatch) => {\r\n        let data = await authApi.loginUser(email, password, rememberMe,captcha)\r\n        if (data.resultCode === 0) {\r\n            dispatch(setUserData())\r\n        } else if (data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl())\r\n            dispatch(stopSubmit(\"Login\", {_error: data.messages[0]}))\r\n        } else {\r\n            dispatch(stopSubmit(\"Login\", {_error: data.messages[0]}))\r\n        }\r\n    }\r\n};\r\n\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n        let data = await authApi.logoutUser();\r\n        if (data.resultCode === 0) {\r\n            let userData = {data: {id: null, login: null, email: null}};\r\n            dispatch(setUserDataSucces(userData, false))\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default AuthReducer;","import React from 'react';\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../redux/AuthReducer\";\n\nclass HeaderContainer extends React.Component {\n    render(){\n        return (\n            <Header{...this.props}/>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuth: state.auth.isAuth,\n        userData: state.auth.userData,\n        state:state\n    }\n}\n\nexport default connect(mapStateToProps,{logout})(HeaderContainer);\n","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../assets/FormContols/FormControls\";\r\nimport {maxLength, required} from \"../../utils/validate/validate\";\r\nimport {login} from \"../../redux/AuthReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from \"./../../assets/FormContols/FormControls.module.css\"\r\n\r\n\r\nlet maxLengthValidate = maxLength(30);\r\n\r\n\r\nlet FormLoginPage = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>login:<Field type=\"text\" component={Input} name={\"email\"} validate={[required, maxLengthValidate]}/>\r\n            </div>\r\n            <div>password:<Field type=\"password\" component={Input} name={\"password\"}\r\n                                 validate={[required, maxLengthValidate]}/></div>\r\n            <div><label><Field type=\"checkbox\" component={Input} name={\"rememberMe\"}/>remember me</label></div>\r\n            {props.error &&\r\n            <div className={styles.errorForm}>{props.error}</div>\r\n            }\r\n            {props.captchaUrl && <img src={props.captchaUrl} alt=\"\"/>}\r\n            {props.captchaUrl && <Field type=\"text\" component={Input} name={\"captcha\"}/>}\r\n            <div>\r\n                <button>click</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nlet ReduxFormLoginPage = reduxForm({form: \"Login\"})(FormLoginPage);\r\n\r\nlet LoginPage = (props) => {\r\n    let onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    };\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>login</h1>\r\n            <ReduxFormLoginPage onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        captchaUrl: state.auth.captchaUrl\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(LoginPage);","import {authApi} from \"../api/api\";\r\nimport {setUserData} from \"./AuthReducer\";\r\n\r\nconst INITIALIZED_APP = \"INITIALIZED-APP\";\r\n\r\n\r\nlet initialState = {\r\n    initializedApp: false\r\n};\r\n\r\nlet AppReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_APP:\r\n            return {\r\n                ...state,\r\n                initializedApp: true\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nlet initializedSucces = () => {\r\n    return {\r\n        type: INITIALIZED_APP\r\n    }\r\n};\r\n\r\nexport let initialized = () => {\r\n    return async (dispatch) => {\r\n        await dispatch(setUserData());\r\n            dispatch(initializedSucces())\r\n    }\r\n};\r\n\r\nexport default AppReducer;","import React from 'react';\nimport styles from './App.module.css';\nimport Sidebar from \"./component/sidebar/Sidebar\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport DialogsContainer from \"./component/dialogs/DialogsContainer\";\nimport UsersContainer from \"./component/users/UsersContainer\";\nimport ProfileContainer from \"./component/profile/ProfileContainer\";\nimport HeaderContainer from \"./component/header/HeaderContainer\";\nimport LoginPage from \"./component/login/loginPage\";\nimport {connect} from \"react-redux\";\nimport {initialized} from \"./redux/AppReducer\";\nimport Preloader from \"./component/preloader/Preloader\";\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initialized()\n    }\n    render() {\n        if(!this.props.initializedApp){\n            return <Preloader/>\n        }\n        return (\n            <BrowserRouter>\n                <div className={styles.App}>\n                    <HeaderContainer/>\n                    <div className={styles.wrapper}>\n                        <Sidebar stateSidebarPage={this.props.state.sidebarPage}/>\n                        <div className={styles.wrapperContent}>\n                            <Route path={\"/profile/:userId?\"} render={() => <ProfileContainer/>}/>\n                            <Route path={\"/dialogs\"} render={() => <DialogsContainer/>}/>\n                            <Route path={\"/users\"} render={() => <UsersContainer/>}/>\n                            <Route path={\"/login\"} render={() => <LoginPage/>}/>\n                        </div>\n                    </div>\n                </div>\n            </BrowserRouter>\n        )\n    }\n}\n\nlet mapStateToProps = (state) =>{\n    return {\n        initializedApp: state.app.initializedApp\n    }\n}\nexport default connect(mapStateToProps,{initialized})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Profile is cached for offline use.\" message.\n              console.log('Profile is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {\r\n    friendsData: [\r\n        {\r\n            name: \"Vadim\",\r\n            id: 1,\r\n            ava: \"https://c7.hotpng.com/preview/549/388/33/shrek-the-third-donkey-princess-fiona-gingerbread-man-t-shirt-shrek.jpg\"\r\n        },\r\n        {\r\n            name: \"Sveta\",\r\n            id: 2,\r\n            ava: \"https://i.pinimg.com/736x/03/a9/c3/03a9c377e1fd89b539ab5cd7539f1f89--tangled-dress-tangled-cosplay.jpg\"\r\n        },\r\n        {\r\n            name: \"Alex\",\r\n            id: 3,\r\n            ava: \"https://vignette.wikia.nocookie.net/tekken/images/0/07/Bob-t6br.jpg/revision/latest?cb=20120810084348&path-prefix=ru\"\r\n        }\r\n    ]\r\n}\r\nlet sidebarPageReducer = (state=initialState, action) => {\r\n    return state\r\n};\r\n\r\nexport default sidebarPageReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profilePageReducer from \"./profilePageReducer\";\r\nimport dialogPageReducer from \"./dialogPageReducer\";\r\nimport sidebarPageReducer from \"./sidebarPageReducer\";\r\nimport usersPageReducer from \"./userPageReducer\";\r\nimport AuthReducer from \"./AuthReducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport AppReducer from \"./AppReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profilePageReducer,\r\n    dialogPage: dialogPageReducer,\r\n    sidebarPage: sidebarPageReducer,\r\n    usersPage: usersPageReducer,\r\n    auth: AuthReducer,\r\n    app: AppReducer,\r\n    form: formReducer\r\n})\r\n\r\nlet store = createStore(reducers,applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store'\nimport {Provider} from \"react-redux\";\n\n\n    ReactDOM.render(\n        <React.StrictMode>\n            <Provider store={store}>\n                <App state={store.getState()}/>\n            </Provider>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorTextarea\":\"FormControls_errorTextarea__lcxlA\",\"errorInput\":\"FormControls_errorInput__OSX_r\",\"errorForm\":\"FormControls_errorForm__qw3pw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersWrapper\":\"Users_usersWrapper__3RvHg\",\"avaBlock\":\"Users_avaBlock__19thE\",\"ava\":\"Users_ava__2S3OP\",\"discriptionBlock\":\"Users_discriptionBlock__38tQ6\",\"status\":\"Users_status__3wyXG\",\"selectedPage\":\"Users_selectedPage__2yD8R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__XivqY\",\"dopInfo\":\"ProfileInfo_dopInfo__2kGlb\",\"avatar\":\"ProfileInfo_avatar__JOBTt\",\"contact\":\"ProfileInfo_contact__3TIRn\",\"errorForm\":\"ProfileInfo_errorForm__2HTJS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__2Iwm_\",\"activeLink\":\"Sidebar_activeLink__2KRx_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2j8-R\",\"wrapper\":\"App_wrapper__3EcuR\",\"wrapperContent\":\"App_wrapperContent__2Hiau\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsBlock\":\"Friends_friendsBlock__3hHEF\",\"wrapperFriends\":\"Friends_wrapperFriends__2D07H\",\"friends\":\"Friends_friends__3IPsQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1osAm\",\"auth\":\"Header_auth__1w2Sz\"};"],"sourceRoot":""}